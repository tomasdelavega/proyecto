#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServerFisio.DatosDB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="FisioDB")]
	public partial class FisioDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTComentario(TComentario instance);
    partial void UpdateTComentario(TComentario instance);
    partial void DeleteTComentario(TComentario instance);
    partial void InsertTDiagnostico(TDiagnostico instance);
    partial void UpdateTDiagnostico(TDiagnostico instance);
    partial void DeleteTDiagnostico(TDiagnostico instance);
    partial void InsertTFisioterapeuta(TFisioterapeuta instance);
    partial void UpdateTFisioterapeuta(TFisioterapeuta instance);
    partial void DeleteTFisioterapeuta(TFisioterapeuta instance);
    partial void InsertTHistorial(THistorial instance);
    partial void UpdateTHistorial(THistorial instance);
    partial void DeleteTHistorial(THistorial instance);
    partial void InsertTLineaPedidos(TLineaPedidos instance);
    partial void UpdateTLineaPedidos(TLineaPedidos instance);
    partial void DeleteTLineaPedidos(TLineaPedidos instance);
    partial void InsertTMaterial(TMaterial instance);
    partial void UpdateTMaterial(TMaterial instance);
    partial void DeleteTMaterial(TMaterial instance);
    partial void InsertTPaciente(TPaciente instance);
    partial void UpdateTPaciente(TPaciente instance);
    partial void DeleteTPaciente(TPaciente instance);
    partial void InsertTPedido(TPedido instance);
    partial void UpdateTPedido(TPedido instance);
    partial void DeleteTPedido(TPedido instance);
    partial void InsertTSala(TSala instance);
    partial void UpdateTSala(TSala instance);
    partial void DeleteTSala(TSala instance);
    partial void InsertTSesionCita(TSesionCita instance);
    partial void UpdateTSesionCita(TSesionCita instance);
    partial void DeleteTSesionCita(TSesionCita instance);
    partial void InsertTTerapia(TTerapia instance);
    partial void UpdateTTerapia(TTerapia instance);
    partial void DeleteTTerapia(TTerapia instance);
    partial void InsertTTratamiento(TTratamiento instance);
    partial void UpdateTTratamiento(TTratamiento instance);
    partial void DeleteTTratamiento(TTratamiento instance);
    #endregion
    public FisioDBDataContext() :
        base(@"Server=" + global::ServerFisio.Properties.Settings.Default.SqlServerIP + @"\SQLEXPRESS;Database=FisioDB;Trusted_Connection=True", mappingSource)
    {
        OnCreated();
    }
		
		public FisioDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FisioDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FisioDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FisioDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TComentario> TComentario
		{
			get
			{
				return this.GetTable<TComentario>();
			}
		}
		
		public System.Data.Linq.Table<TDiagnostico> TDiagnostico
		{
			get
			{
				return this.GetTable<TDiagnostico>();
			}
		}
		
		public System.Data.Linq.Table<TFisioterapeuta> TFisioterapeuta
		{
			get
			{
				return this.GetTable<TFisioterapeuta>();
			}
		}
		
		public System.Data.Linq.Table<THistorial> THistorial
		{
			get
			{
				return this.GetTable<THistorial>();
			}
		}
		
		public System.Data.Linq.Table<TLineaPedidos> TLineaPedidos
		{
			get
			{
				return this.GetTable<TLineaPedidos>();
			}
		}
		
		public System.Data.Linq.Table<TMaterial> TMaterial
		{
			get
			{
				return this.GetTable<TMaterial>();
			}
		}
		
		public System.Data.Linq.Table<TPaciente> TPaciente
		{
			get
			{
				return this.GetTable<TPaciente>();
			}
		}
		
		public System.Data.Linq.Table<TPedido> TPedido
		{
			get
			{
				return this.GetTable<TPedido>();
			}
		}
		
		public System.Data.Linq.Table<TSala> TSala
		{
			get
			{
				return this.GetTable<TSala>();
			}
		}
		
		public System.Data.Linq.Table<TSesionCita> TSesionCita
		{
			get
			{
				return this.GetTable<TSesionCita>();
			}
		}
		
		public System.Data.Linq.Table<TTerapia> TTerapia
		{
			get
			{
				return this.GetTable<TTerapia>();
			}
		}
		
		public System.Data.Linq.Table<TTratamiento> TTratamiento
		{
			get
			{
				return this.GetTable<TTratamiento>();
			}
		}
	}
	
	[Table(Name="dbo.TComentario")]
	[DataContract()]
	public partial class TComentario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Comentario;
		
		private System.DateTime _Fecha;
		
		private string _Dni_paciente;
		
		private EntityRef<TPaciente> _TPaciente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnComentarioChanging(string value);
    partial void OnComentarioChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnDni_pacienteChanging(string value);
    partial void OnDni_pacienteChanged();
    #endregion
		
		public TComentario()
		{
			this.Initialize();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="comentario", Storage="_Comentario", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=2)]
		public string Comentario
		{
			get
			{
				return this._Comentario;
			}
			set
			{
				if ((this._Comentario != value))
				{
					this.OnComentarioChanging(value);
					this.SendPropertyChanging();
					this._Comentario = value;
					this.SendPropertyChanged("Comentario");
					this.OnComentarioChanged();
				}
			}
		}
		
		[Column(Name="fecha", Storage="_Fecha", DbType="DateTime NOT NULL")]
		[DataMember(Order=3)]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[Column(Name="dni_paciente", Storage="_Dni_paciente", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string Dni_paciente
		{
			get
			{
				return this._Dni_paciente;
			}
			set
			{
				if ((this._Dni_paciente != value))
				{
					this.OnDni_pacienteChanging(value);
					this.SendPropertyChanging();
					this._Dni_paciente = value;
					this.SendPropertyChanged("Dni_paciente");
					this.OnDni_pacienteChanged();
				}
			}
		}
		
		[Association(Name="TPaciente_TComentario", Storage="_TPaciente", ThisKey="Dni_paciente", OtherKey="Dni", IsForeignKey=true, DeleteOnNull=true)]
		public TPaciente TPaciente
		{
			get
			{
				return this._TPaciente.Entity;
			}
			set
			{
				TPaciente previousValue = this._TPaciente.Entity;
				if (((previousValue != value) 
							|| (this._TPaciente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TPaciente.Entity = null;
						previousValue.TComentario.Remove(this);
					}
					this._TPaciente.Entity = value;
					if ((value != null))
					{
						value.TComentario.Add(this);
						this._Dni_paciente = value.Dni;
					}
					else
					{
						this._Dni_paciente = default(string);
					}
					this.SendPropertyChanged("TPaciente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._TPaciente = default(EntityRef<TPaciente>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.TDiagnostico")]
	[DataContract()]
	public partial class TDiagnostico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private string _Descripcion;
		
		private EntitySet<THistorial> _THistorial;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TDiagnostico()
		{
			this.Initialize();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="nombre", Storage="_Nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Column(Name="descripcion", Storage="_Descripcion", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=3)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Association(Name="TDiagnostico_THistorial", Storage="_THistorial", ThisKey="Id", OtherKey="Id_diagnostico")]
		[DataMember(Order=4, EmitDefaultValue=false)]
		public EntitySet<THistorial> THistorial
		{
			get
			{
				if ((this.serializing 
							&& (this._THistorial.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._THistorial;
			}
			set
			{
				this._THistorial.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THistorial(THistorial entity)
		{
			this.SendPropertyChanging();
			entity.TDiagnostico = this;
		}
		
		private void detach_THistorial(THistorial entity)
		{
			this.SendPropertyChanging();
			entity.TDiagnostico = null;
		}
		
		private void Initialize()
		{
			this._THistorial = new EntitySet<THistorial>(new Action<THistorial>(this.attach_THistorial), new Action<THistorial>(this.detach_THistorial));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.TFisioterapeuta")]
	[DataContract()]
	public partial class TFisioterapeuta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Dni;
		
		private string _Nombre;
		
		private string _Apellidos;
		
		private string _Num_colegiado;
		
		private System.Nullable<int> _Tfno;
		
		private System.Nullable<int> _Tfno2;
		
		private string _Email;
		
		private double _Salario;
		
		private string _Usuario;
		
		private string _Pass;
		
		private string _Derechos;
		
		private string _Turno;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDniChanging(string value);
    partial void OnDniChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnNum_colegiadoChanging(string value);
    partial void OnNum_colegiadoChanged();
    partial void OnTfnoChanging(System.Nullable<int> value);
    partial void OnTfnoChanged();
    partial void OnTfno2Changing(System.Nullable<int> value);
    partial void OnTfno2Changed();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSalarioChanging(double value);
    partial void OnSalarioChanged();
    partial void OnUsuarioChanging(string value);
    partial void OnUsuarioChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnDerechosChanging(string value);
    partial void OnDerechosChanged();
    partial void OnTurnoChanging(string value);
    partial void OnTurnoChanged();
    #endregion
		
		public TFisioterapeuta()
		{
			this.Initialize();
		}
		
		[Column(Name="dni", Storage="_Dni", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Dni
		{
			get
			{
				return this._Dni;
			}
			set
			{
				if ((this._Dni != value))
				{
					this.OnDniChanging(value);
					this.SendPropertyChanging();
					this._Dni = value;
					this.SendPropertyChanged("Dni");
					this.OnDniChanged();
				}
			}
		}
		
		[Column(Name="nombre", Storage="_Nombre", DbType="VarChar(20)")]
		[DataMember(Order=2)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Column(Name="apellidos", Storage="_Apellidos", DbType="VarChar(30)")]
		[DataMember(Order=3)]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this.OnApellidosChanging(value);
					this.SendPropertyChanging();
					this._Apellidos = value;
					this.SendPropertyChanged("Apellidos");
					this.OnApellidosChanged();
				}
			}
		}
		
		[Column(Name="num_colegiado", Storage="_Num_colegiado", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string Num_colegiado
		{
			get
			{
				return this._Num_colegiado;
			}
			set
			{
				if ((this._Num_colegiado != value))
				{
					this.OnNum_colegiadoChanging(value);
					this.SendPropertyChanging();
					this._Num_colegiado = value;
					this.SendPropertyChanged("Num_colegiado");
					this.OnNum_colegiadoChanged();
				}
			}
		}
		
		[Column(Name="tfno", Storage="_Tfno", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> Tfno
		{
			get
			{
				return this._Tfno;
			}
			set
			{
				if ((this._Tfno != value))
				{
					this.OnTfnoChanging(value);
					this.SendPropertyChanging();
					this._Tfno = value;
					this.SendPropertyChanged("Tfno");
					this.OnTfnoChanged();
				}
			}
		}
		
		[Column(Name="tfno2", Storage="_Tfno2", DbType="Int")]
		[DataMember(Order=6)]
		public System.Nullable<int> Tfno2
		{
			get
			{
				return this._Tfno2;
			}
			set
			{
				if ((this._Tfno2 != value))
				{
					this.OnTfno2Changing(value);
					this.SendPropertyChanging();
					this._Tfno2 = value;
					this.SendPropertyChanged("Tfno2");
					this.OnTfno2Changed();
				}
			}
		}
		
		[Column(Name="email", Storage="_Email", DbType="VarChar(30)")]
		[DataMember(Order=7)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Name="salario", Storage="_Salario", DbType="Float NOT NULL")]
		[DataMember(Order=8)]
		public double Salario
		{
			get
			{
				return this._Salario;
			}
			set
			{
				if ((this._Salario != value))
				{
					this.OnSalarioChanging(value);
					this.SendPropertyChanging();
					this._Salario = value;
					this.SendPropertyChanged("Salario");
					this.OnSalarioChanged();
				}
			}
		}
		
		[Column(Name="usuario", Storage="_Usuario", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		[DataMember(Order=9)]
		public string Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[Column(Name="pass", Storage="_Pass", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		[DataMember(Order=10)]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[Column(Name="derechos", Storage="_Derechos", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		[DataMember(Order=11)]
		public string Derechos
		{
			get
			{
				return this._Derechos;
			}
			set
			{
				if ((this._Derechos != value))
				{
					this.OnDerechosChanging(value);
					this.SendPropertyChanging();
					this._Derechos = value;
					this.SendPropertyChanged("Derechos");
					this.OnDerechosChanged();
				}
			}
		}
		
		[Column(Name="turno", Storage="_Turno", DbType="Char(1) NOT NULL", CanBeNull=false)]
		[DataMember(Order=12)]
		public string Turno
		{
			get
			{
				return this._Turno;
			}
			set
			{
				if ((this._Turno != value))
				{
					this.OnTurnoChanging(value);
					this.SendPropertyChanging();
					this._Turno = value;
					this.SendPropertyChanged("Turno");
					this.OnTurnoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.THistorial")]
	[DataContract()]
	public partial class THistorial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Id_diagnostico;
		
		private string _Dni_paciente;
		
		private System.DateTime _F_inicio;
		
		private System.Nullable<System.DateTime> _F_fin;
		
		private string _Estado;
		
		private string _Observaciones;
		
		private string _Zona;
		
		private EntitySet<TTratamiento> _TTratamiento;
		
		private EntityRef<TDiagnostico> _TDiagnostico;
		
		private EntityRef<TPaciente> _TPaciente;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnId_diagnosticoChanging(int value);
    partial void OnId_diagnosticoChanged();
    partial void OnDni_pacienteChanging(string value);
    partial void OnDni_pacienteChanged();
    partial void OnF_inicioChanging(System.DateTime value);
    partial void OnF_inicioChanged();
    partial void OnF_finChanging(System.Nullable<System.DateTime> value);
    partial void OnF_finChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnObservacionesChanging(string value);
    partial void OnObservacionesChanged();
    partial void OnZonaChanging(string value);
    partial void OnZonaChanged();
    #endregion
		
		public THistorial()
		{
			this.Initialize();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="id_diagnostico", Storage="_Id_diagnostico", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int Id_diagnostico
		{
			get
			{
				return this._Id_diagnostico;
			}
			set
			{
				if ((this._Id_diagnostico != value))
				{
					this.OnId_diagnosticoChanging(value);
					this.SendPropertyChanging();
					this._Id_diagnostico = value;
					this.SendPropertyChanged("Id_diagnostico");
					this.OnId_diagnosticoChanged();
				}
			}
		}
		
		[Column(Name="dni_paciente", Storage="_Dni_paciente", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string Dni_paciente
		{
			get
			{
				return this._Dni_paciente;
			}
			set
			{
				if ((this._Dni_paciente != value))
				{
					this.OnDni_pacienteChanging(value);
					this.SendPropertyChanging();
					this._Dni_paciente = value;
					this.SendPropertyChanged("Dni_paciente");
					this.OnDni_pacienteChanged();
				}
			}
		}
		
		[Column(Name="f_inicio", Storage="_F_inicio", DbType="SmallDateTime NOT NULL")]
		[DataMember(Order=4)]
		public System.DateTime F_inicio
		{
			get
			{
				return this._F_inicio;
			}
			set
			{
				if ((this._F_inicio != value))
				{
					this.OnF_inicioChanging(value);
					this.SendPropertyChanging();
					this._F_inicio = value;
					this.SendPropertyChanged("F_inicio");
					this.OnF_inicioChanged();
				}
			}
		}
		
		[Column(Name="f_fin", Storage="_F_fin", DbType="SmallDateTime")]
		[DataMember(Order=5)]
		public System.Nullable<System.DateTime> F_fin
		{
			get
			{
				return this._F_fin;
			}
			set
			{
				if ((this._F_fin != value))
				{
					this.OnF_finChanging(value);
					this.SendPropertyChanging();
					this._F_fin = value;
					this.SendPropertyChanged("F_fin");
					this.OnF_finChanged();
				}
			}
		}
		
		[Column(Name="estado", Storage="_Estado", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		[DataMember(Order=6)]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[Column(Name="observaciones", Storage="_Observaciones", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=7)]
		public string Observaciones
		{
			get
			{
				return this._Observaciones;
			}
			set
			{
				if ((this._Observaciones != value))
				{
					this.OnObservacionesChanging(value);
					this.SendPropertyChanging();
					this._Observaciones = value;
					this.SendPropertyChanged("Observaciones");
					this.OnObservacionesChanged();
				}
			}
		}
		
		[Column(Name="zona", Storage="_Zona", DbType="VarChar(20)")]
		[DataMember(Order=8)]
		public string Zona
		{
			get
			{
				return this._Zona;
			}
			set
			{
				if ((this._Zona != value))
				{
					this.OnZonaChanging(value);
					this.SendPropertyChanging();
					this._Zona = value;
					this.SendPropertyChanged("Zona");
					this.OnZonaChanged();
				}
			}
		}
		
		[Association(Name="THistorial_TTratamiento", Storage="_TTratamiento", ThisKey="Id", OtherKey="Id_historial")]
		[DataMember(Order=9, EmitDefaultValue=false)]
		public EntitySet<TTratamiento> TTratamiento
		{
			get
			{
				if ((this.serializing 
							&& (this._TTratamiento.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TTratamiento;
			}
			set
			{
				this._TTratamiento.Assign(value);
			}
		}
		
		[Association(Name="TDiagnostico_THistorial", Storage="_TDiagnostico", ThisKey="Id_diagnostico", OtherKey="Id", IsForeignKey=true)]
		public TDiagnostico TDiagnostico
		{
			get
			{
				return this._TDiagnostico.Entity;
			}
			set
			{
				TDiagnostico previousValue = this._TDiagnostico.Entity;
				if (((previousValue != value) 
							|| (this._TDiagnostico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TDiagnostico.Entity = null;
						previousValue.THistorial.Remove(this);
					}
					this._TDiagnostico.Entity = value;
					if ((value != null))
					{
						value.THistorial.Add(this);
						this._Id_diagnostico = value.Id;
					}
					else
					{
						this._Id_diagnostico = default(int);
					}
					this.SendPropertyChanged("TDiagnostico");
				}
			}
		}
		
		[Association(Name="TPaciente_THistorial", Storage="_TPaciente", ThisKey="Dni_paciente", OtherKey="Dni", IsForeignKey=true)]
		public TPaciente TPaciente
		{
			get
			{
				return this._TPaciente.Entity;
			}
			set
			{
				TPaciente previousValue = this._TPaciente.Entity;
				if (((previousValue != value) 
							|| (this._TPaciente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TPaciente.Entity = null;
						previousValue.THistorial.Remove(this);
					}
					this._TPaciente.Entity = value;
					if ((value != null))
					{
						value.THistorial.Add(this);
						this._Dni_paciente = value.Dni;
					}
					else
					{
						this._Dni_paciente = default(string);
					}
					this.SendPropertyChanged("TPaciente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TTratamiento(TTratamiento entity)
		{
			this.SendPropertyChanging();
			entity.THistorial = this;
		}
		
		private void detach_TTratamiento(TTratamiento entity)
		{
			this.SendPropertyChanging();
			entity.THistorial = null;
		}
		
		private void Initialize()
		{
			this._TTratamiento = new EntitySet<TTratamiento>(new Action<TTratamiento>(this.attach_TTratamiento), new Action<TTratamiento>(this.detach_TTratamiento));
			this._TDiagnostico = default(EntityRef<TDiagnostico>);
			this._TPaciente = default(EntityRef<TPaciente>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.TLineaPedidos")]
	[DataContract()]
	public partial class TLineaPedidos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_pedido;
		
		private int _Id_material;
		
		private int _Cantidad;
		
		private double _Precio;
		
		private EntityRef<TMaterial> _TMaterial;
		
		private EntityRef<TPedido> _TPedido;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_pedidoChanging(int value);
    partial void OnId_pedidoChanged();
    partial void OnId_materialChanging(int value);
    partial void OnId_materialChanged();
    partial void OnCantidadChanging(int value);
    partial void OnCantidadChanged();
    partial void OnPrecioChanging(double value);
    partial void OnPrecioChanged();
    #endregion
		
		public TLineaPedidos()
		{
			this.Initialize();
		}
		
		[Column(Name="id_pedido", Storage="_Id_pedido", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public int Id_pedido
		{
			get
			{
				return this._Id_pedido;
			}
			set
			{
				if ((this._Id_pedido != value))
				{
					this.OnId_pedidoChanging(value);
					this.SendPropertyChanging();
					this._Id_pedido = value;
					this.SendPropertyChanged("Id_pedido");
					this.OnId_pedidoChanged();
				}
			}
		}
		
		[Column(Name="id_material", Storage="_Id_material", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public int Id_material
		{
			get
			{
				return this._Id_material;
			}
			set
			{
				if ((this._Id_material != value))
				{
					this.OnId_materialChanging(value);
					this.SendPropertyChanging();
					this._Id_material = value;
					this.SendPropertyChanged("Id_material");
					this.OnId_materialChanged();
				}
			}
		}
		
		[Column(Name="cantidad", Storage="_Cantidad", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[Column(Name="precio", Storage="_Precio", DbType="Float NOT NULL")]
		[DataMember(Order=4)]
		public double Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[Association(Name="TMaterial_TLineaPedidos", Storage="_TMaterial", ThisKey="Id_material", OtherKey="Id_material", IsForeignKey=true)]
		public TMaterial TMaterial
		{
			get
			{
				return this._TMaterial.Entity;
			}
			set
			{
				TMaterial previousValue = this._TMaterial.Entity;
				if (((previousValue != value) 
							|| (this._TMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TMaterial.Entity = null;
						previousValue.TLineaPedidos.Remove(this);
					}
					this._TMaterial.Entity = value;
					if ((value != null))
					{
						value.TLineaPedidos.Add(this);
						this._Id_material = value.Id_material;
					}
					else
					{
						this._Id_material = default(int);
					}
					this.SendPropertyChanged("TMaterial");
				}
			}
		}
		
		[Association(Name="TPedido_TLineaPedidos", Storage="_TPedido", ThisKey="Id_pedido", OtherKey="Id_pedido", IsForeignKey=true, DeleteOnNull=true)]
		public TPedido TPedido
		{
			get
			{
				return this._TPedido.Entity;
			}
			set
			{
				TPedido previousValue = this._TPedido.Entity;
				if (((previousValue != value) 
							|| (this._TPedido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TPedido.Entity = null;
						previousValue.TLineaPedidos.Remove(this);
					}
					this._TPedido.Entity = value;
					if ((value != null))
					{
						value.TLineaPedidos.Add(this);
						this._Id_pedido = value.Id_pedido;
					}
					else
					{
						this._Id_pedido = default(int);
					}
					this.SendPropertyChanged("TPedido");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._TMaterial = default(EntityRef<TMaterial>);
			this._TPedido = default(EntityRef<TPedido>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.TMaterial")]
	[DataContract()]
	public partial class TMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_material;
		
		private string _Nombre;
		
		private EntitySet<TLineaPedidos> _TLineaPedidos;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_materialChanging(int value);
    partial void OnId_materialChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TMaterial()
		{
			this.Initialize();
		}
		
		[Column(Name="id_material", Storage="_Id_material", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int Id_material
		{
			get
			{
				return this._Id_material;
			}
			set
			{
				if ((this._Id_material != value))
				{
					this.OnId_materialChanging(value);
					this.SendPropertyChanging();
					this._Id_material = value;
					this.SendPropertyChanged("Id_material");
					this.OnId_materialChanged();
				}
			}
		}
		
		[Column(Name="nombre", Storage="_Nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Association(Name="TMaterial_TLineaPedidos", Storage="_TLineaPedidos", ThisKey="Id_material", OtherKey="Id_material")]
		[DataMember(Order=3, EmitDefaultValue=false)]
		public EntitySet<TLineaPedidos> TLineaPedidos
		{
			get
			{
				if ((this.serializing 
							&& (this._TLineaPedidos.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TLineaPedidos;
			}
			set
			{
				this._TLineaPedidos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TLineaPedidos(TLineaPedidos entity)
		{
			this.SendPropertyChanging();
			entity.TMaterial = this;
		}
		
		private void detach_TLineaPedidos(TLineaPedidos entity)
		{
			this.SendPropertyChanging();
			entity.TMaterial = null;
		}
		
		private void Initialize()
		{
			this._TLineaPedidos = new EntitySet<TLineaPedidos>(new Action<TLineaPedidos>(this.attach_TLineaPedidos), new Action<TLineaPedidos>(this.detach_TLineaPedidos));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.TPaciente")]
	[DataContract()]
	public partial class TPaciente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Dni;
		
		private string _Nombre;
		
		private string _Apellidos;
		
		private System.Nullable<System.DateTime> _F_nac;
		
		private string _Sexo;
		
		private System.Nullable<int> _Tfno1;
		
		private System.Nullable<int> _Tfno2;
		
		private string _Email;
		
		private string _Observs;
		
		private EntitySet<TComentario> _TComentario;
		
		private EntitySet<THistorial> _THistorial;
		
		private EntitySet<TSesionCita> _TSesionCita;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDniChanging(string value);
    partial void OnDniChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnF_nacChanging(System.Nullable<System.DateTime> value);
    partial void OnF_nacChanged();
    partial void OnSexoChanging(string value);
    partial void OnSexoChanged();
    partial void OnTfno1Changing(System.Nullable<int> value);
    partial void OnTfno1Changed();
    partial void OnTfno2Changing(System.Nullable<int> value);
    partial void OnTfno2Changed();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnObservsChanging(string value);
    partial void OnObservsChanged();
    #endregion
		
		public TPaciente()
		{
			this.Initialize();
		}
		
		[Column(Name="dni", Storage="_Dni", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string Dni
		{
			get
			{
				return this._Dni;
			}
			set
			{
				if ((this._Dni != value))
				{
					this.OnDniChanging(value);
					this.SendPropertyChanging();
					this._Dni = value;
					this.SendPropertyChanged("Dni");
					this.OnDniChanged();
				}
			}
		}
		
		[Column(Name="nombre", Storage="_Nombre", DbType="VarChar(20)")]
		[DataMember(Order=2)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Column(Name="apellidos", Storage="_Apellidos", DbType="VarChar(30)")]
		[DataMember(Order=3)]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this.OnApellidosChanging(value);
					this.SendPropertyChanging();
					this._Apellidos = value;
					this.SendPropertyChanged("Apellidos");
					this.OnApellidosChanged();
				}
			}
		}
		
		[Column(Name="f_nac", Storage="_F_nac", DbType="SmallDateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> F_nac
		{
			get
			{
				return this._F_nac;
			}
			set
			{
				if ((this._F_nac != value))
				{
					this.OnF_nacChanging(value);
					this.SendPropertyChanging();
					this._F_nac = value;
					this.SendPropertyChanged("F_nac");
					this.OnF_nacChanged();
				}
			}
		}
		
		[Column(Name="sexo", Storage="_Sexo", DbType="Char(1)")]
		[DataMember(Order=5)]
		public string Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this.OnSexoChanging(value);
					this.SendPropertyChanging();
					this._Sexo = value;
					this.SendPropertyChanged("Sexo");
					this.OnSexoChanged();
				}
			}
		}
		
		[Column(Name="tfno1", Storage="_Tfno1", DbType="Int")]
		[DataMember(Order=6)]
		public System.Nullable<int> Tfno1
		{
			get
			{
				return this._Tfno1;
			}
			set
			{
				if ((this._Tfno1 != value))
				{
					this.OnTfno1Changing(value);
					this.SendPropertyChanging();
					this._Tfno1 = value;
					this.SendPropertyChanged("Tfno1");
					this.OnTfno1Changed();
				}
			}
		}
		
		[Column(Name="tfno2", Storage="_Tfno2", DbType="Int")]
		[DataMember(Order=7)]
		public System.Nullable<int> Tfno2
		{
			get
			{
				return this._Tfno2;
			}
			set
			{
				if ((this._Tfno2 != value))
				{
					this.OnTfno2Changing(value);
					this.SendPropertyChanging();
					this._Tfno2 = value;
					this.SendPropertyChanged("Tfno2");
					this.OnTfno2Changed();
				}
			}
		}
		
		[Column(Name="email", Storage="_Email", DbType="VarChar(30)")]
		[DataMember(Order=8)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Name="observs", Storage="_Observs", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=9)]
		public string Observs
		{
			get
			{
				return this._Observs;
			}
			set
			{
				if ((this._Observs != value))
				{
					this.OnObservsChanging(value);
					this.SendPropertyChanging();
					this._Observs = value;
					this.SendPropertyChanged("Observs");
					this.OnObservsChanged();
				}
			}
		}
		
		[Association(Name="TPaciente_TComentario", Storage="_TComentario", ThisKey="Dni", OtherKey="Dni_paciente")]
		[DataMember(Order=10, EmitDefaultValue=false)]
		public EntitySet<TComentario> TComentario
		{
			get
			{
				if ((this.serializing 
							&& (this._TComentario.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TComentario;
			}
			set
			{
				this._TComentario.Assign(value);
			}
		}
		
		[Association(Name="TPaciente_THistorial", Storage="_THistorial", ThisKey="Dni", OtherKey="Dni_paciente")]
		[DataMember(Order=11, EmitDefaultValue=false)]
		public EntitySet<THistorial> THistorial
		{
			get
			{
				if ((this.serializing 
							&& (this._THistorial.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._THistorial;
			}
			set
			{
				this._THistorial.Assign(value);
			}
		}
		
		[Association(Name="TPaciente_TSesionCita", Storage="_TSesionCita", ThisKey="Dni", OtherKey="Dni_paciente")]
		[DataMember(Order=12, EmitDefaultValue=false)]
		public EntitySet<TSesionCita> TSesionCita
		{
			get
			{
				if ((this.serializing 
							&& (this._TSesionCita.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TSesionCita;
			}
			set
			{
				this._TSesionCita.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TComentario(TComentario entity)
		{
			this.SendPropertyChanging();
			entity.TPaciente = this;
		}
		
		private void detach_TComentario(TComentario entity)
		{
			this.SendPropertyChanging();
			entity.TPaciente = null;
		}
		
		private void attach_THistorial(THistorial entity)
		{
			this.SendPropertyChanging();
			entity.TPaciente = this;
		}
		
		private void detach_THistorial(THistorial entity)
		{
			this.SendPropertyChanging();
			entity.TPaciente = null;
		}
		
		private void attach_TSesionCita(TSesionCita entity)
		{
			this.SendPropertyChanging();
			entity.TPaciente = this;
		}
		
		private void detach_TSesionCita(TSesionCita entity)
		{
			this.SendPropertyChanging();
			entity.TPaciente = null;
		}
		
		private void Initialize()
		{
			this._TComentario = new EntitySet<TComentario>(new Action<TComentario>(this.attach_TComentario), new Action<TComentario>(this.detach_TComentario));
			this._THistorial = new EntitySet<THistorial>(new Action<THistorial>(this.attach_THistorial), new Action<THistorial>(this.detach_THistorial));
			this._TSesionCita = new EntitySet<TSesionCita>(new Action<TSesionCita>(this.attach_TSesionCita), new Action<TSesionCita>(this.detach_TSesionCita));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.TPedido")]
	[DataContract()]
	public partial class TPedido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_pedido;
		
		private System.DateTime _Fecha;
		
		private string _Observaciones;
		
		private EntitySet<TLineaPedidos> _TLineaPedidos;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_pedidoChanging(int value);
    partial void OnId_pedidoChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnObservacionesChanging(string value);
    partial void OnObservacionesChanged();
    #endregion
		
		public TPedido()
		{
			this.Initialize();
		}
		
		[Column(Name="id_pedido", Storage="_Id_pedido", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int Id_pedido
		{
			get
			{
				return this._Id_pedido;
			}
			set
			{
				if ((this._Id_pedido != value))
				{
					this.OnId_pedidoChanging(value);
					this.SendPropertyChanging();
					this._Id_pedido = value;
					this.SendPropertyChanged("Id_pedido");
					this.OnId_pedidoChanged();
				}
			}
		}
		
		[Column(Name="fecha", Storage="_Fecha", DbType="SmallDateTime NOT NULL")]
		[DataMember(Order=2)]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[Column(Name="observaciones", Storage="_Observaciones", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=3)]
		public string Observaciones
		{
			get
			{
				return this._Observaciones;
			}
			set
			{
				if ((this._Observaciones != value))
				{
					this.OnObservacionesChanging(value);
					this.SendPropertyChanging();
					this._Observaciones = value;
					this.SendPropertyChanged("Observaciones");
					this.OnObservacionesChanged();
				}
			}
		}
		
		[Association(Name="TPedido_TLineaPedidos", Storage="_TLineaPedidos", ThisKey="Id_pedido", OtherKey="Id_pedido")]
		[DataMember(Order=4, EmitDefaultValue=false)]
		public EntitySet<TLineaPedidos> TLineaPedidos
		{
			get
			{
				if ((this.serializing 
							&& (this._TLineaPedidos.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TLineaPedidos;
			}
			set
			{
				this._TLineaPedidos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TLineaPedidos(TLineaPedidos entity)
		{
			this.SendPropertyChanging();
			entity.TPedido = this;
		}
		
		private void detach_TLineaPedidos(TLineaPedidos entity)
		{
			this.SendPropertyChanging();
			entity.TPedido = null;
		}
		
		private void Initialize()
		{
			this._TLineaPedidos = new EntitySet<TLineaPedidos>(new Action<TLineaPedidos>(this.attach_TLineaPedidos), new Action<TLineaPedidos>(this.detach_TLineaPedidos));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.TSala")]
	[DataContract()]
	public partial class TSala : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Numero;
		
		private string _Nombre;
		
		private string _Descripcion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumeroChanging(int value);
    partial void OnNumeroChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TSala()
		{
			this.Initialize();
		}
		
		[Column(Name="numero", Storage="_Numero", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[Column(Name="nombre", Storage="_Nombre", DbType="VarChar(20)")]
		[DataMember(Order=2)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Column(Name="descripcion", Storage="_Descripcion", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=3)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.TSesionCita")]
	[DataContract()]
	public partial class TSesionCita : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _Id_historial;
		
		private System.Nullable<int> _Id_terapia;
		
		private System.DateTime _Fecha;
		
		private double _Precio;
		
		private bool _Pagado;
		
		private string _Observaciones;
		
		private string _Id_fisio;
		
		private System.Nullable<int> _Id_sala;
		
		private int _Id_cita;
		
		private string _Dni_paciente;
		
		private EntityRef<TPaciente> _TPaciente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_historialChanging(System.Nullable<int> value);
    partial void OnId_historialChanged();
    partial void OnId_terapiaChanging(System.Nullable<int> value);
    partial void OnId_terapiaChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnPrecioChanging(double value);
    partial void OnPrecioChanged();
    partial void OnPagadoChanging(bool value);
    partial void OnPagadoChanged();
    partial void OnObservacionesChanging(string value);
    partial void OnObservacionesChanged();
    partial void OnId_fisioChanging(string value);
    partial void OnId_fisioChanged();
    partial void OnId_salaChanging(System.Nullable<int> value);
    partial void OnId_salaChanged();
    partial void OnId_citaChanging(int value);
    partial void OnId_citaChanged();
    partial void OnDni_pacienteChanging(string value);
    partial void OnDni_pacienteChanged();
    #endregion
		
		public TSesionCita()
		{
			this.Initialize();
		}
		
		[Column(Name="id_historial", Storage="_Id_historial", DbType="Int")]
		[DataMember(Order=1)]
		public System.Nullable<int> Id_historial
		{
			get
			{
				return this._Id_historial;
			}
			set
			{
				if ((this._Id_historial != value))
				{
					this.OnId_historialChanging(value);
					this.SendPropertyChanging();
					this._Id_historial = value;
					this.SendPropertyChanged("Id_historial");
					this.OnId_historialChanged();
				}
			}
		}
		
		[Column(Name="id_terapia", Storage="_Id_terapia", DbType="Int")]
		[DataMember(Order=2)]
		public System.Nullable<int> Id_terapia
		{
			get
			{
				return this._Id_terapia;
			}
			set
			{
				if ((this._Id_terapia != value))
				{
					this.OnId_terapiaChanging(value);
					this.SendPropertyChanging();
					this._Id_terapia = value;
					this.SendPropertyChanged("Id_terapia");
					this.OnId_terapiaChanged();
				}
			}
		}
		
		[Column(Name="fecha", Storage="_Fecha", DbType="SmallDateTime NOT NULL")]
		[DataMember(Order=3)]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[Column(Name="precio", Storage="_Precio", DbType="Float NOT NULL")]
		[DataMember(Order=4)]
		public double Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[Column(Name="pagado", Storage="_Pagado", DbType="Bit NOT NULL")]
		[DataMember(Order=5)]
		public bool Pagado
		{
			get
			{
				return this._Pagado;
			}
			set
			{
				if ((this._Pagado != value))
				{
					this.OnPagadoChanging(value);
					this.SendPropertyChanging();
					this._Pagado = value;
					this.SendPropertyChanged("Pagado");
					this.OnPagadoChanged();
				}
			}
		}
		
		[Column(Name="observaciones", Storage="_Observaciones", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=6)]
		public string Observaciones
		{
			get
			{
				return this._Observaciones;
			}
			set
			{
				if ((this._Observaciones != value))
				{
					this.OnObservacionesChanging(value);
					this.SendPropertyChanging();
					this._Observaciones = value;
					this.SendPropertyChanged("Observaciones");
					this.OnObservacionesChanged();
				}
			}
		}
		
		[Column(Name="id_fisio", Storage="_Id_fisio", DbType="VarChar(20)")]
		[DataMember(Order=7)]
		public string Id_fisio
		{
			get
			{
				return this._Id_fisio;
			}
			set
			{
				if ((this._Id_fisio != value))
				{
					this.OnId_fisioChanging(value);
					this.SendPropertyChanging();
					this._Id_fisio = value;
					this.SendPropertyChanged("Id_fisio");
					this.OnId_fisioChanged();
				}
			}
		}
		
		[Column(Name="id_sala", Storage="_Id_sala", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> Id_sala
		{
			get
			{
				return this._Id_sala;
			}
			set
			{
				if ((this._Id_sala != value))
				{
					this.OnId_salaChanging(value);
					this.SendPropertyChanging();
					this._Id_sala = value;
					this.SendPropertyChanged("Id_sala");
					this.OnId_salaChanged();
				}
			}
		}
		
		[Column(Name="id_cita", Storage="_Id_cita", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=9)]
		public int Id_cita
		{
			get
			{
				return this._Id_cita;
			}
			set
			{
				if ((this._Id_cita != value))
				{
					this.OnId_citaChanging(value);
					this.SendPropertyChanging();
					this._Id_cita = value;
					this.SendPropertyChanged("Id_cita");
					this.OnId_citaChanged();
				}
			}
		}
		
		[Column(Name="dni_paciente", Storage="_Dni_paciente", DbType="VarChar(20)")]
		[DataMember(Order=10)]
		public string Dni_paciente
		{
			get
			{
				return this._Dni_paciente;
			}
			set
			{
				if ((this._Dni_paciente != value))
				{
					this.OnDni_pacienteChanging(value);
					this.SendPropertyChanging();
					this._Dni_paciente = value;
					this.SendPropertyChanged("Dni_paciente");
					this.OnDni_pacienteChanged();
				}
			}
		}
		
		[Association(Name="TPaciente_TSesionCita", Storage="_TPaciente", ThisKey="Dni_paciente", OtherKey="Dni", IsForeignKey=true)]
		public TPaciente TPaciente
		{
			get
			{
				return this._TPaciente.Entity;
			}
			set
			{
				TPaciente previousValue = this._TPaciente.Entity;
				if (((previousValue != value) 
							|| (this._TPaciente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TPaciente.Entity = null;
						previousValue.TSesionCita.Remove(this);
					}
					this._TPaciente.Entity = value;
					if ((value != null))
					{
						value.TSesionCita.Add(this);
						this._Dni_paciente = value.Dni;
					}
					else
					{
						this._Dni_paciente = default(string);
					}
					this.SendPropertyChanged("TPaciente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._TPaciente = default(EntityRef<TPaciente>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.TTerapia")]
	[DataContract()]
	public partial class TTerapia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nombre;
		
		private string _Descripcion;
		
		private System.Nullable<int> _Numsesiones;
		
		private int _Id;
		
		private string _Imagen;
		
		private EntitySet<TTratamiento> _TTratamiento;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnNumsesionesChanging(System.Nullable<int> value);
    partial void OnNumsesionesChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnImagenChanging(string value);
    partial void OnImagenChanged();
    #endregion
		
		public TTerapia()
		{
			this.Initialize();
		}
		
		[Column(Name="nombre", Storage="_Nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Column(Name="descripcion", Storage="_Descripcion", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=2)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Column(Name="numsesiones", Storage="_Numsesiones", DbType="Int")]
		[DataMember(Order=3)]
		public System.Nullable<int> Numsesiones
		{
			get
			{
				return this._Numsesiones;
			}
			set
			{
				if ((this._Numsesiones != value))
				{
					this.OnNumsesionesChanging(value);
					this.SendPropertyChanging();
					this._Numsesiones = value;
					this.SendPropertyChanged("Numsesiones");
					this.OnNumsesionesChanged();
				}
			}
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=4)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="imagen", Storage="_Imagen", DbType="VarChar(200)")]
		[DataMember(Order=5)]
		public string Imagen
		{
			get
			{
				return this._Imagen;
			}
			set
			{
				if ((this._Imagen != value))
				{
					this.OnImagenChanging(value);
					this.SendPropertyChanging();
					this._Imagen = value;
					this.SendPropertyChanged("Imagen");
					this.OnImagenChanged();
				}
			}
		}
		
		[Association(Name="TTerapia_TTratamiento", Storage="_TTratamiento", ThisKey="Id", OtherKey="Id_terapia")]
		[DataMember(Order=6, EmitDefaultValue=false)]
		public EntitySet<TTratamiento> TTratamiento
		{
			get
			{
				if ((this.serializing 
							&& (this._TTratamiento.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TTratamiento;
			}
			set
			{
				this._TTratamiento.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TTratamiento(TTratamiento entity)
		{
			this.SendPropertyChanging();
			entity.TTerapia = this;
		}
		
		private void detach_TTratamiento(TTratamiento entity)
		{
			this.SendPropertyChanging();
			entity.TTerapia = null;
		}
		
		private void Initialize()
		{
			this._TTratamiento = new EntitySet<TTratamiento>(new Action<TTratamiento>(this.attach_TTratamiento), new Action<TTratamiento>(this.detach_TTratamiento));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.TTratamiento")]
	[DataContract()]
	public partial class TTratamiento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_historial;
		
		private int _Id_terapia;
		
		private System.DateTime _F_inicio;
		
		private System.Nullable<System.DateTime> _F_fin;
		
		private string _Estado;
		
		private string _Observaciones;
		
		private EntityRef<THistorial> _THistorial;
		
		private EntityRef<TTerapia> _TTerapia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_historialChanging(int value);
    partial void OnId_historialChanged();
    partial void OnId_terapiaChanging(int value);
    partial void OnId_terapiaChanged();
    partial void OnF_inicioChanging(System.DateTime value);
    partial void OnF_inicioChanged();
    partial void OnF_finChanging(System.Nullable<System.DateTime> value);
    partial void OnF_finChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnObservacionesChanging(string value);
    partial void OnObservacionesChanged();
    #endregion
		
		public TTratamiento()
		{
			this.Initialize();
		}
		
		[Column(Name="id_historial", Storage="_Id_historial", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public int Id_historial
		{
			get
			{
				return this._Id_historial;
			}
			set
			{
				if ((this._Id_historial != value))
				{
					this.OnId_historialChanging(value);
					this.SendPropertyChanging();
					this._Id_historial = value;
					this.SendPropertyChanged("Id_historial");
					this.OnId_historialChanged();
				}
			}
		}
		
		[Column(Name="id_terapia", Storage="_Id_terapia", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=2)]
		public int Id_terapia
		{
			get
			{
				return this._Id_terapia;
			}
			set
			{
				if ((this._Id_terapia != value))
				{
					this.OnId_terapiaChanging(value);
					this.SendPropertyChanging();
					this._Id_terapia = value;
					this.SendPropertyChanged("Id_terapia");
					this.OnId_terapiaChanged();
				}
			}
		}
		
		[Column(Name="f_inicio", Storage="_F_inicio", DbType="SmallDateTime NOT NULL")]
		[DataMember(Order=3)]
		public System.DateTime F_inicio
		{
			get
			{
				return this._F_inicio;
			}
			set
			{
				if ((this._F_inicio != value))
				{
					this.OnF_inicioChanging(value);
					this.SendPropertyChanging();
					this._F_inicio = value;
					this.SendPropertyChanged("F_inicio");
					this.OnF_inicioChanged();
				}
			}
		}
		
		[Column(Name="f_fin", Storage="_F_fin", DbType="SmallDateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> F_fin
		{
			get
			{
				return this._F_fin;
			}
			set
			{
				if ((this._F_fin != value))
				{
					this.OnF_finChanging(value);
					this.SendPropertyChanging();
					this._F_fin = value;
					this.SendPropertyChanged("F_fin");
					this.OnF_finChanged();
				}
			}
		}
		
		[Column(Name="estado", Storage="_Estado", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[Column(Name="observaciones", Storage="_Observaciones", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=6)]
		public string Observaciones
		{
			get
			{
				return this._Observaciones;
			}
			set
			{
				if ((this._Observaciones != value))
				{
					this.OnObservacionesChanging(value);
					this.SendPropertyChanging();
					this._Observaciones = value;
					this.SendPropertyChanged("Observaciones");
					this.OnObservacionesChanged();
				}
			}
		}
		
		[Association(Name="THistorial_TTratamiento", Storage="_THistorial", ThisKey="Id_historial", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public THistorial THistorial
		{
			get
			{
				return this._THistorial.Entity;
			}
			set
			{
				THistorial previousValue = this._THistorial.Entity;
				if (((previousValue != value) 
							|| (this._THistorial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THistorial.Entity = null;
						previousValue.TTratamiento.Remove(this);
					}
					this._THistorial.Entity = value;
					if ((value != null))
					{
						value.TTratamiento.Add(this);
						this._Id_historial = value.Id;
					}
					else
					{
						this._Id_historial = default(int);
					}
					this.SendPropertyChanged("THistorial");
				}
			}
		}
		
		[Association(Name="TTerapia_TTratamiento", Storage="_TTerapia", ThisKey="Id_terapia", OtherKey="Id", IsForeignKey=true)]
		public TTerapia TTerapia
		{
			get
			{
				return this._TTerapia.Entity;
			}
			set
			{
				TTerapia previousValue = this._TTerapia.Entity;
				if (((previousValue != value) 
							|| (this._TTerapia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TTerapia.Entity = null;
						previousValue.TTratamiento.Remove(this);
					}
					this._TTerapia.Entity = value;
					if ((value != null))
					{
						value.TTratamiento.Add(this);
						this._Id_terapia = value.Id;
					}
					else
					{
						this._Id_terapia = default(int);
					}
					this.SendPropertyChanged("TTerapia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._THistorial = default(EntityRef<THistorial>);
			this._TTerapia = default(EntityRef<TTerapia>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
